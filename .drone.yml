pipeline:
  run-tests-suite:
    image: michalpodeszwa/docker-compose:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - ./bin/drone-run-tests.sh api-tests
      - ./bin/drone-run-tests.sh web-tests
    when:
      event: [pull_request]

  publish-backend-docker:
    image: plugins/docker:1.12
    username: ${DOCKER_USERNAME}
    password: ${DOCKER_PASSWORD}
    email: ${DOCKER_EMAIL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    repo: thedevtom/coedu-backend
    tags:
      - "${DRONE_BRANCH}_${DRONE_COMMIT}"
    dockerfile: ./backend/Dockerfile
    context: ./backend/
    when:
      branch: ["master", "production"]

  publish-frontend-docker:
    image: plugins/docker:1.12
    username: ${DOCKER_USERNAME}
    password: ${DOCKER_PASSWORD}
    email: ${DOCKER_EMAIL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    repo: thedevtom/coedu-frontend
    tags:
      - "${DRONE_BRANCH}_${DRONE_COMMIT}"
    dockerfile: ./frontend/Dockerfile
    context: ./frontend/
    when:
      branch: ["master", "production"]

  publish-nginx-docker:
    image: plugins/docker:1.12
    username: ${DOCKER_USERNAME}
    password: ${DOCKER_PASSWORD}
    email: ${DOCKER_EMAIL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    repo: thedevtom/coedu-nginx
    tags:
      - "${DRONE_BRANCH}_${DRONE_COMMIT}"
    dockerfile: ./nginx/Dockerfile
    context: ./nginx/
    when:
      branch: ["master", "production"]

  deploy-staging:
    image: williamyeh/ansible:ubuntu16.04
    commands:
      - mkdir -p ~/.ssh/
      - echo ${SSH_KEY} > ~/.ssh/id_rsa_app && chmod 600 ~/.ssh/id_rsa_app
      - cd ./deploy/bin && ./deploy-staging-app.sh --private-key ~/.ssh/id_rsa_app --extra-vars "docker_tag=${DRONE_BRANCH}_${DRONE_COMMIT} docker_registry_username=$DOCKER_USERNAME docker_registry_password=$DOCKER_PASSWORD docker_registry_email=$DOCKER_EMAIL"
    when:
      branch: ["master"]
      event: [push]

  slack-notification:
    image: plugins/slack
    # that will send a personal notification to our drone-starter slack channel
    # read here how to setup slack webhooks for your account: https://api.slack.com/incoming-webhooks
    webhook: https://hooks.slack.com/services/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
    username: drone-ci
    icon_emoji: ":rocket:"
    when:
      event: [ push, tag, deployment, pull_request ]
      status: [ success, failure ]
